name: Release

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Semver type of new version (major / minor / patch)"
        # Input has to be provided for the workflow to run
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  hadolint:
    uses: SkynetLabs/.github/.github/workflows/reusable_dockerfile_lint.yml@master

  test:
    runs-on: ubuntu-latest
    env:
      MONGO_PORT: 37017
      MONGO_USER: admin
      MONGO_PASSWORD: aO4tV5tC1oU3oQ7u
      MONGO_REPLICASET: skynet
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      # - name: Install analyze
      #   run: go install gitlab.com/NebulousLabs/analyze@latest
      # - name: Install golangci-lint
      #   run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.45.0
      - name: Install dependencies and Clean up
        run: make deps
      # - name: Lint
      #   run: make lint
      # - name: Run short tests
      #   run: make test
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          # getting connection refused on following steps. try setting replicaset here with no auth
          mongodb-version: "4.4.1"
          # mongodb-username: ${{env.MONGO_USER}}
          # mongodb-password: ${{env.MONGO_PASSWORD}}
          mongodb-port: ${{env.MONGO_PORT}}
          mongodb-replica-set: ${{env.MONGO_REPLICASET}}
        # run: |
        #   docker run --rm --detach --name blocker-mongo-test-db -p ${{env.MONGO_PORT}}:${{env.MONGO_PORT}} -e MONGO_INITDB_ROOT_USERNAME=${{env.MONGO_USER}} -e MONGO_INITDB_ROOT_PASSWORD=${{env.MONGO_PASSWORD}}
      - name: docker ps
        run: docker ps
      # - name: sleep
      #   run: sleep 30
      # - name: Initialize Replica Set
      #   run: |
      #     mongod --port=${{env.MONGO_PORT}} --replSet=${{env.MONGO_REPLICASET}}

      # docker exec mongodb mongo -u ${{env.MONGO_USER}} -pwd ${{env.MONGO_PASSWORD}} --port ${{env.MONGO_PORT}} --eval 'rs.initiate({_id: \"${{env.MONGO_REPLICASET}}\", members: [{ _id: 0, host: \"localhost:${{env.MONGO_PORT}}\" }]})'
      - name: Initialize User
        run: |
          docker exec mongodb mongo -u ${{env.MONGO_USER}} -pwd ${{env.MONGO_PASSWORD}} --port ${{env.MONGO_PORT}} --eval 'rs.initiate({_id: \"${{env.MONGO_REPLICASET}}\", members: [{ _id: 0, host: \"localhost:${{env.MONGO_PORT}}\" }]})'
      - name: Run long tests
        run: make test-long-ci

  # Make a release if
  # - there were changes and this is a scheduled job
  # - This is a manually trigger job, i.e. workflow_dispatch
  release:
    needs: [hadolint, test]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      new_version: ${{ steps.version.outputs.new-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Version Release
        id: version
        uses: SkynetLabs/.github/.github/actions/version-release@master
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          version-bump: ${{github.event.inputs.version}}

  docker:
    needs: release
    name: Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: SkynetLabs/.github/.github/actions/docker-publish@master
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME}}
          docker_password: ${{ secrets.DOCKER_PASSWORD}}
          docker_repository: skynetlabs/abuse-scanner
          semver_version: ${{ needs.release.outputs.new_version }}
